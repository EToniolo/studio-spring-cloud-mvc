services:
  postgresdb:
    container_name: postgresqldb
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=mydatabase'
      - 'POSTGRES_PASSWORD=secret'
      - 'POSTGRES_USER=myuser'
      - 'PGDATA=/var/lib/postgresql/data/pgdata'
    volumes:
      - local_pgdata:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - net-private

  auth-server:
    container_name: auth-server
    image:  docker.io/library/oauth2-idp:0.0.1-SNAPSHOT
    ports:
      - "9090:9090"
    networks:
      - net-private


  gateway:
    container_name: gateway
    image: docker.io/library/gateway:0.0.1-SNAPSHOT
    depends_on:
      - auth-server
      - api-server
      - webapp
    ports:
      - "8080:8080"
    environment:
      - AUTH_SERVER_ADDRESS=http://auth-server:9090
      - API_SERVER_ADDRESS=http://api-server:8081
      - UI_SERVER_ADDRESS=http://webapp:9000
    networks:
      - net-private

  api-server:
    container_name: api-server
    image: docker.io/library/me-service:0.0.1-SNAPSHOT
    depends_on:
      - postgresdb
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresdb:5432/mydatabase
      - SPRING_DATASOURCE_USERNAME=myuser
      - SPRING_DATASOURCE_PASSWORD=secret

    networks:
      - net-private

  webapp:
    container_name: webapp
    image: docker.io/library/webapp 
    ports:
      - "9000:9000"
    networks:
      - net-private

volumes:
  local_pgdata:
    driver: local      

networks:
  net-private:
    name: network-private

  



